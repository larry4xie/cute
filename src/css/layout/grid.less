/**
 * 12 grid
 * 流式布局不设置默认边距
 */
// common
.grid1, .grid2, .grid3, .grid4, .grid5, .grid6, .grid7, .grid8, .grid9, .grid10, .grid11, .grid12 {
  display:inline;
  float:left;
}

// 固定布局
#grid > .solid(@gridColumnWidth, @gridGutterWidth);

// 流式布局
#grid > .fluid(@fluidGridColumnWidth);

// mixins
#grid {
  // 固定布局
  .solid (@gridColumnWidth, @gridGutterWidth, @suffix: "") {
    // grid
    .gridX (@index) when (@index > 0) {
      (~".grid@{index}") { .grid(@index); }
      .gridX(@index - 1);
    }
    .gridX (0) {}
    .grid (@columns) {
      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
    }

    // grid offset
    .offsetX (@index) when (@index > 0) {
      (~".offset@{index}") { .offset(@index); }
      .offsetX(@index - 1);
    }
    .offsetX (0) {}
    .offset (@columns) {
      margin-left: (@gridColumnWidth * @columns) + (@gridGutterWidth * @columns);
    }

    // row
    (~".row@{suffix}") {
      .clearfix();
      margin-right: @gridGutterWidth * -1;
      // .gridX and .offsetX
      .grid1, .grid2, .grid3, .grid4, .grid5, .grid6, .grid7, .grid8, .grid9, .grid10, .grid11, .grid12 {
        margin-right: @gridGutterWidth;
      }
      .gridX (@gridColumns);
      .offsetX (@gridColumns - 1);
    }

    // container
    (~".container@{suffix}") {
      // Set the container width and align center
      width: (@gridColumnWidth * @gridColumns) + (@gridGutterWidth * (@gridColumns - 1));
      margin-right: auto;
      margin-left: auto;
      .clearfix();
    }
  }

  // 流式布局
  .fluid (@fluidGridColumnWidth, @suffix: "") {
    // grid fluid grid
    .gridX (@index) when (@index > 0) {
      (~".grid@{index}") { .grid(@index); }
      .gridX(@index - 1);
    }
    .gridX (0) {}
    .grid (@columns) {
      width: @fluidGridColumnWidth * @columns;
    }

    // grid fluid offset
    .offsetX (@index) when (@index > 0) {
      (~'.offset@{index}') { .offset(@index); }
      .offsetX(@index - 1);
    }
    .offsetX (0) {}
    .offset (@columns) {
      margin-left: @fluidGridColumnWidth * @columns;
    }

    // row-fluid
    (~".row-fluid@{suffix}") {
      .clearfix();
      *overflow: hidden;
      width: 100%;
      // generate .gridX and .offsetX
      .grid1, .grid2, .grid3, .grid4, .grid5, .grid6, .grid7, .grid8, .grid9, .grid10, .grid11, .grid12 {
        *clear: right; // ie 67 width 100% bug
      }
      .gridX (@fluidGridColumns);
      .offsetX (@fluidGridColumns - 1);
    }

    // container-fluid
    // nothing
  }
}